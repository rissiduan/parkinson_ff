import cv2
import numpy as np
import pickle
from tkinter import Tk, filedialog
from PIL import Image

# --------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏†‡∏≤‡∏û ----------
def prepare_image(image_path):
    print("[1] ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î...")
    img = Image.open(image_path).convert("L")  # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô grayscale
    img = img.resize((128, 128))               # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î
    img_np = np.array(img).flatten()           # flatten ‡πÄ‡∏õ‡πá‡∏ô 1 ‡∏°‡∏¥‡∏ï‡∏¥
    return img_np.reshape(1, -1)               # reshape ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏°‡πÄ‡∏î‡∏•

# --------- ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• ----------
model_path = 'model/model_check/svm_model_wave_check.pkl'
print(f"[2] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏à‡∏≤‡∏Å {model_path} ...")
with open(model_path, 'rb') as file:
    model = pickle.load(file)

# --------- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ----------
Tk().withdraw()  # ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á root
file_path = filedialog.askopenfilename(title="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û Spiral ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö", 
                                       filetypes=[("Image files", "*.png *.jpg *.jpeg *.bmp *.webp")])
if not file_path:
    print("‚ùå ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û")
    exit()

# --------- ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏†‡∏≤‡∏û ----------
features = prepare_image(file_path)
prediction = model.predict(features)[0]

# confidence ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
try:
    confidence = max(model.predict_proba(features)[0])
except:
    confidence = None

# --------- ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå ----------
result = "Yes" if prediction == 1 else "No"
print(f"\n‚úÖ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö: {result}")
if confidence is not None:
    print(f"üìä ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: {confidence*100:.2f}%")
